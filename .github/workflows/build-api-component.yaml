name: Build API component
# concurrency is specified as we can see race conditions with some of the
# actions that require updates to helm charts and package.json if multiple repos
# are trying to build at the same time
concurrency: build_coordinator

# this workflow is expected to the used via 'uses' tag and not run manually
on:
  workflow_dispatch:
    inputs:
      org:
        required: true
        type: string
        description: "private org name to ensure we don't run on forks"
      coordinator:
        required: true
        type: string
        description: "name of repo with helper actions in it"
      registry:
        required: true
        type: string
        description: "Docker container registry org name"
    secrets:
      ci_username:
        required: true
        description: "CI username"
      ci_user_email:
        required: true
        description: "CI user email"
      ci_github_token:
        required: true
        description: "CI github token"
      ci_access_token:
        required: true
        description: "CI access token"
      docker_registry:
        required: true
        description: "docker registry"
      docker_username:
        required: true
        description: "docker username"
      docker_password:
        required: true
        description: "docker password"
  workflow_call:
    inputs:
      org:
        required: true
        type: string
        description: "private org name to ensure we don't run on forks"
      coordinator:
        required: true
        type: string
        description: "name of repo with helper actions in it"
      registry:
        required: true
        type: string
        description: "Docker container registry org name"
    secrets:
      ci_username:
        required: true
        description: "CI username"
      ci_user_email:
        required: true
        description: "CI user email"
      ci_github_token:
        required: true
        description: "CI github token"
      ci_access_token:
        required: true
        description: "CI access token"
      docker_registry:
        required: true
        description: "docker registry"
      docker_username:
        required: true
        description: "docker username"
      docker_password:
        required: true
        description: "docker password"

jobs:

  build:
    if:  ${{ github.repository_owner == inputs.org && github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout source repository

      - name: Setup node 16
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Checkout external actions from ${{ inputs.coordinator }}
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.org }}/${{ inputs.coordinator }}
          ref: main
          token: "${{ secrets.ci_access_token }}"
          path: coordinator

      - name: Prepare environment
        uses: ./coordinator/.github/actions/prepare_environment
        with:
          repository_name: "${{ github.event.repository.name }}"
          ci_username: "${{ secrets.ci_username }}"
          ci_user_email: "${{ secrets.ci_user_email }}"
          ci_github_token: "${{ secrets.ci_github_token }}"
          ci_access_token: "${{ secrets.ci_access_token }}"
          docker_registry: "${{ secrets.docker_registry }}"
          docker_username: "${{ secrets.docker_username }}"
          docker_password: "${{ secrets.docker_password }}"

      - name: Extract release version into environment
        id: put_release_version_in_env
        uses: ./coordinator/.github/actions/put_release_version_in_env

      - name: Create the Docker image tag from environment release version
        id: create_image_tag
        uses: kvasira/i-github-utils/.github/actions/create_image_tag@main
        with:
          package_version: ${{ steps.put_release_version_in_env.outputs.app_release_version }}

      - name: Build the Docker images for an API component
        uses: kvasira/i-github-utils/.github/actions/create_api_docker_images@main
        with:
          org: "${{ inputs.org }}"
          coordinator: "${{ inputs.coordinator }}"
          registry: "${{ inputs.registry }}"
          image_tag: ${{ steps.create_image_tag.outputs.specific_version }}
          docker_registry: "${{ secrets.docker_registry }}"
          docker_username: "${{ secrets.docker_username }}"
          docker_password: "${{ secrets.docker_password }}"

      - name: Create the Helm charts
        uses: kvasira/i-github-utils/.github/actions/create_api_helm_charts@main
        with:
          org: "${{ inputs.org }}"
          coordinator: "${{ inputs.coordinator }}"
          image_tag: ${{ steps.create_image_tag.outputs.specific_version }}
          repo_name: "${{ github.event.repository.name }}"
          ci_access_token: "${{ secrets.ci_access_token }}"

      - name: Tag the release version
        uses: ./coordinator/.github/actions/git_tag_release_version

      - name: Update the package.json to the next version
        uses: ./coordinator/.github/actions/update_next_version

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ci_github_token }}
        with:
          tag_name: ${{ steps.put_release_version_in_env.outputs.app_release_version }}
          release_name: Release ${{ steps.put_release_version_in_env.outputs.app_release_version }}
          draft: false
          prerelease: false
